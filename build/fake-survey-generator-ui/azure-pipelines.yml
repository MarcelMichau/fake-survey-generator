trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - src/client/ui/*
      - charts/fake-survey-generator-ui/*
      - build/fake-survey-generator-ui/*

pr:
  branches:
    include:
      - main
      - feat/*
      - fix/*
      - chore/*
      - refactor/*
  paths:
    include:
      - src/client/ui/*
      - build/fake-survey-generator-ui/*

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  projectName: fake-survey-generator-ui
  registryName: acrfakesurveygenerator
  imageRepository: "$(registryName).azurecr.io/$(projectName)"
  resourceGroupName: rg-fake-survey-generator
  DOCKER_BUILDKIT: 1
  NBGV_GitEngine: LibGit2

stages:
  - stage: Build
    displayName: "Build"
    jobs:
      - job: Build
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: UseDotNet@2
            displayName: "Install .NET Core SDK"
            inputs:
              packageType: "sdk"
              useGlobalJson: true

          - task: DotNetCoreCLI@2
            displayName: Install NBGV tool
            inputs:
              command: custom
              custom: tool
              arguments: install --tool-path ./src/client/ui nbgv --version 3.5.109

          - script: ./nbgv cloud -a
            workingDirectory: src/client/ui
            displayName: Set Build Number & Version Variables

          - script: |
              echo "##vso[task.setvariable variable=VersionTag;isOutput=true]$(NBGV_SemVer1)"
            name: "SetVersionTag"
            displayName: "Set SemVer Version Tag from NBGV"

          - task: Docker@2
            displayName: "Build Docker Image"
            inputs:
              containerRegistry: "FakeSurveyGeneratorAzureContainerRegistry"
              repository: "$(projectName)"
              command: "build"
              Dockerfile: "src/client/ui/Dockerfile"
              buildContext: .
              arguments: "--build-arg REACT_APP_VERSION=$(SetVersionTag.VersionTag) --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $(imageRepository):latest"
              tags: |
                $(SetVersionTag.VersionTag)
                latest

          - task: Docker@2
            displayName: "Push Image to Azure Container Registry"
            condition: and(succeeded(), eq(variables.isMain, 'true'))
            inputs:
              containerRegistry: "FakeSurveyGeneratorAzureContainerRegistry"
              repository: "$(projectName)"
              command: "push"
              tags: |
                $(semVerVersionTag)
                latest

  - stage: Application_Deployment
    dependsOn:
      - Build
      - Publish
    condition: and(succeeded(), eq(variables.isMain, true))
    displayName: "Application Deployment"
    jobs:
      - deployment: Deployment_Job
        displayName: Deploy Fake Survey Generator UI
        pool:
          vmImage: "ubuntu-latest"
        variables:
          semVerVersionTag: $[stageDependencies.Build.Build.outputs['SetVersionTag.VersionTag']]
        environment: "aca"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@1
                  inputs:
                    azureSubscription: "Azure Service Connection"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                      az containerapp update \
                        --name ca-$(projectName) \
                        --resource-group $(resourceGroupName) \
                        --image $(imageRepository):$(semVerVersionTag)
                  displayName: "Update Container App"
